{"ast":null,"code":"var _jsxFileName = \"F:\\\\REACT_THAPA_YTUBE\\\\GoogleKeepClone\\\\googlekeepclone\\\\src\\\\CreateNote.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateNote = props => {\n  _s();\n\n  const [expand, setExpand] = useState(false);\n  const [note, setNote] = useState({\n    title: '',\n    content: ''\n  });\n\n  const inputEvent = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setNote(prevData => {\n      return { ...prevData,\n        //this is called spread operator....\n        [name]: value\n      };\n    });\n  };\n\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: '',\n      content: ''\n    });\n  };\n\n  const expandIt = () => {\n    setExpand(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [expand ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: note.title,\n          onChange: inputEvent,\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"\",\n          id: \"\",\n          cols: \"\",\n          rows: \"\",\n          name: \"content\",\n          value: note.content,\n          onChange: inputEvent,\n          placeholder: \"Write a note...\",\n          onClick: expandIt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateNote, \"eNCl8jxAwG9fn/d3nQV2M0BVFX8=\");\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["F:/REACT_THAPA_YTUBE/GoogleKeepClone/googlekeepclone/src/CreateNote.jsx"],"names":["React","useState","Button","AddIcon","CreateNote","props","expand","setExpand","note","setNote","title","content","inputEvent","event","value","name","target","prevData","addEvent","passNote","expandIt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AACA,MAAMC,UAAU,GAAEC,KAAD,IAAS;AAAA;;AACtB,QAAK,CAACC,MAAD,EAAQC,SAAR,IAAmBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CACzB;AACIS,IAAAA,KAAK,EAAC,EADV;AAEIC,IAAAA,OAAO,EAAC;AAFZ,GADyB,CAA7B;;AAKA,QAAMC,UAAU,GAAEC,KAAD,IAAS;AACtB,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAaF,KAAK,CAACG,MAAzB;AACAP,IAAAA,OAAO,CAAEQ,QAAD,IAAY;AAChB,aAAO,EACH,GAAGA,QADA;AACS;AACZ,SAACF,IAAD,GAAOD;AAFJ,OAAP;AAKH,KANM,CAAP;AAOH,GATD;;AAUA,QAAMI,QAAQ,GAAC,MAAI;AACfb,IAAAA,KAAK,CAACc,QAAN,CAAeX,IAAf;AACAC,IAAAA,OAAO,CAAC;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,OAAO,EAAC;AAFJ,KAAD,CAAP;AAIH,GAND;;AAOA,QAAMS,QAAQ,GAAC,MAAI;AACfb,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA,mBACKD,MAAM,gBACP;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,IAAI,EAAC,OAFL;AAGA,UAAA,KAAK,EAAEE,IAAI,CAACE,KAHZ;AAIA,UAAA,QAAQ,EAAEE,UAJV;AAKA,UAAA,WAAW,EAAC,OALZ;AAMA,UAAA,YAAY,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,gBADO,GAOc,IARzB,eASI;AACA,UAAA,IAAI,EAAC,EADL;AACQ,UAAA,EAAE,EAAC,EADX;AACc,UAAA,IAAI,EAAC,EADnB;AACsB,UAAA,IAAI,EAAC,EAD3B;AAEA,UAAA,IAAI,EAAC,SAFL;AAGA,UAAA,KAAK,EAAEJ,IAAI,CAACG,OAHZ;AAIA,UAAA,QAAQ,EAAEC,UAJV;AAKA,UAAA,WAAW,EAAC,iBALZ;AAMA,UAAA,OAAO,EAAEQ;AANT;AAAA;AAAA;AAAA;AAAA,gBATJ,eAkBI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEF,QAAjB;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA4BH,CAxDD;;GAAMd,U;;KAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst CreateNote=(props)=>{\r\n    const[expand,setExpand]=useState(false);\r\n    const [note,setNote]=useState(\r\n        {\r\n            title:'',\r\n            content:''\r\n        });\r\n    const inputEvent=(event)=>{\r\n        const {value,name}=event.target;\r\n        setNote((prevData)=>{\r\n            return {\r\n                ...prevData,//this is called spread operator....\r\n                [name]:value\r\n\r\n            }\r\n        })\r\n    }\r\n    const addEvent=()=>{\r\n        props.passNote(note);\r\n        setNote({\r\n            title:'',\r\n            content:''\r\n        })\r\n    };\r\n    const expandIt=()=>{\r\n        setExpand(true);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className='main_note'>\r\n            <form>\r\n                {expand?\r\n                <input \r\n                type=\"text\" \r\n                name='title'\r\n                value={note.title} \r\n                onChange={inputEvent} \r\n                placeholder='Title' \r\n                autoComplete='off'/>:null}\r\n                <textarea \r\n                name=\"\" id=\"\" cols=\"\" rows=\"\" \r\n                name='content'\r\n                value={note.content} \r\n                onChange={inputEvent} \r\n                placeholder='Write a note...'\r\n                onClick={expandIt}\r\n                >\r\n                </textarea>\r\n                <Button onClick={addEvent}>\r\n                    <AddIcon className='plus_sign'/>\r\n                </Button>\r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}